---
format: gfm
---

```{r}
#| echo: false
#| warning: false

knitr::opts_chunk$set(
  collapse = TRUE,
  eval = TRUE,
  echo = TRUE,
  comment = "#>",
  fig.path = "vignettes/vignette-",
  message=FALSE,
  warning=FALSE
)
# pkgdown::build_site()

library(Rinteract)
library(kableExtra)
library(ggplot2)
```

# Rinteract

[![R-CMD-check](https://github.com/jonfoong/Rinteract/actions/workflows/R-CMD-check.yaml/badge.svg)](https://github.com/jonfoong/Rinteract/actions/workflows/R-CMD-check.yaml)[![codecov](https://codecov.io/github/jonfoong/Rinteract/branch/main/graph/badge.svg?token=2SOK4T1220)](https://codecov.io/github/jonfoong/Rinteract)[![CRAN status](https://www.r-pkg.org/badges/version/Rinteract)](https://CRAN.R-project.org/package=Rinteract)[![License: GPL-3](https://img.shields.io/badge/license-GPL--3-blue.svg)](https://cran.r-project.org/web/licenses/GPL-3)[![](https://img.shields.io/badge/devel%20version-0.1.0-blue.svg)](https://github.com/jonfoong/Rinteract)

Rinteract is a small package that makes it easy to output all conditional effects in models with interaction terms instead of computing hypothesis tests manually.

## Installation

```{r install, eval=FALSE}
devtools::install_github("jonfoong/Rinteract")
```

## Overview

Interaction terms are widely used in regression models to uncover underlying heterogeneity. Despite its ubiquity, the interpretation of interaction models is often confusing at best and inaccurate at worst. In addition, studies typically only report estimates from a model output and neglect their conditional effects. As noted in Brambor et al (2006):

> ...the typical results table often conveys very little information of interest because the analyst is not concerned with model parameters per se; he or she is primarily interested in the marginal effect of X on Y for substantively meaningful values of the conditioning variable Z. While it is often possible to calculate the marginal effect of X for any value of Z from the typical results table using a little algebra, the problem is that it is not possible to do the same for the standard errors.

In addition, a standard regression output conditions main effects on all other terms being zero, a rather meaningless condition for many variables (like age). Demeaning variables before estimation partly resolves this issue, but we may also be interested in effect sizes and precision estimates for specific conditions beyond just the mean. Consider a hypothetical drug treatment for which we are also interested in heterogeneity across genders. We estimate a simple model:

$$Y = \alpha + \beta * Treat + \gamma * Female + \delta * Treat * Female+\epsilon$$


The estimated parameter $\hat{\delta}$ gives us the difference in treatment effect between male and female patients. However, we are also interested in the treatment effect conditioning on being a female patient, which is given by $\hat{\beta} + \hat{\delta}$. While this simple arithmetic can be performed by looking at a regression table, uncertainty estimates are not so easily obtained. 

`Rinteract` facilitates this by computing all conditional effects in a model with interactions. It accepts a model object as input and relies on `multcomp` to perform hypothesis testing on all conditions of interest. It is also capable of graphing these effects using tabular ggplots.

## Usage

We use the xx dataset to illustrate our example. By default, int_conditions takes a fitted model and returns all effects in the 0, 1, and mean condition for all variables. 

```{r}
mod <- lm(Y~X1*X2*X3*X4, toydata)
dat <- int_conditions(mod, toydata,
                      zero_con = c(X3 = 5, X4 = 18))
dat |> 
  head() |>
  kable(digits = 3)

```

However, we can also specify values other than the zero condition for the variables to take. 

```{r}
mod <- lm(Y~X1*X2*X3*X4, toydata)
dat <- int_conditions(mod, toydata)
dat |> 
  head() |>
  kable(digits = 3)

```


We can then graph the result. `int_graph` returns a ggplot object that can be further manipulated.

```{r}
#| fig.width: 10
#| fig.height: 10

int_graph(dat, X1+X2~X3+X4, digits = 2) +
  ggtitle("All conditional means and effects from a four-way interaction")
```


---

Note: As of now the package only accepts `lm`, `glm` and `lm_robust` models. `int_graph` also only takes up to four-way interactions as of yet; for clarity we do not recommended going higher than this. One way to visualise five or higher way interactions is to choose up to four variables to plot, and then keep values for all other variables fixed before feeding into `int_graph`.
